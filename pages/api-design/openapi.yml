openapi: 3.0.0

info:
  version: 0.2.0
  title: Lexical.cloud API
  description: Queryable interface for the data curated by Lexical.cloud

tags:
  - name: products 
    description: Lookup entries for cloud products
  - name: glossary
    description: Lookup glossary terms for cloud computing
  - name: taxonomy
    description: Lookup by taxonomy for the cloud (services, providers, domains, categories, features, labels)

paths:

  /products/{serviceId}/{providerId}/{productId}:
    get:
      description: Returns a product entry for a service and provider
      tags:
        - products
      parameters:
        - name: serviceId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for the service being offered
        - name: providerId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for the provider of the service
        - name: productId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for the product entry
      responses:
        '200':
          description: Successfully returned a product entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{serviceId}/{providerId}/{productId}/{modelId}:
    get:
      description: Returns a product model entry for a service and provider
      tags:
        - products
      parameters:
        - name: serviceId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for the service being offered
        - name: providerId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for the provider of the service
        - name: productId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for the product entry
        - name: modelId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for the product model
      responses:
        '200':
          description: Successfully returned a product model entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductModel'

  /glossary/{termId}:
    get:
      description: Returns a glossary entry for a term
      tags:
        - glossary
      parameters:
        - name: termId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for term in glossary
      responses:
        '200':
          description: Successfully returned a glossary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Definition'

  /{taxonomyId}/{termId}:
    get:
      description: Returns entry for a term within a taxonomy
      tags:
        - taxonomy
      parameters:
        - name: taxonomyId 
          in: path
          required: true
          schema:
            type: string
            enum:
              - services
              - providers
              - domains
              - categories
              - features
              - labels
          description: Identifier for the taxonomy
        - name: termId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for term in the taxonomy
      responses:
        '200':
          description: Successfully returned a taxonomy term
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Term'

  /{taxonomyId}/{termId}/relations:
    get:
      description: Returns relations for a term within a taxonomy
      tags:
        - taxonomy
      parameters:
        - name: taxonomyId 
          in: path
          required: true
          schema:
            type: string
            enum:
              - services
              - providers
              - domains
              - categories
              - features
              - labels
          description: Identifier for the taxonomy
        - name: termId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for term in the taxonomy
      responses:
        '200':
          description: Successfully returned relations for taxonomy term
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relation'

  /{taxonomyId}/{termId}/products:
    get:
      description: Returns product entries for a taxonomy term
      tags:
        - taxonomy
      parameters:
        - name: taxonomyId 
          in: path
          required: true
          schema:
            type: string
            enum:
              - services
              - providers
              - domains
              - categories
              - features
              - labels
          description: Identifier for the taxonomy
        - name: termId 
          in: path
          required: true
          schema:
            type: string
          description: Identifier for term in the taxonomy
      responses:
        '200':
          description: Successfully returned product entries for a taxonomy term
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

components:

  schemas:

    Definition:
      allOf:
        - type: object
          properties:
            title:
              type: string
              description: Title for proper display purposes
            url:
              type: string
              description: Link to definition
            links:
              $ref: '#/components/schemas/Links'
              description: Path to definition entry
          required:
            - title
            - permalink
        - $ref: '#/components/schemas/Taxonomy'

    Product:
      allOf:
        - type: object
          properties:
            name:
              type: string
              description: Name of product entry
            links:
              $ref: '#/components/schemas/ProductLinks'
              description: Path to product instance
          required:
            - name
            - links
        - $ref: '#/components/schemas/Taxonomy'

    ProductModel:
      allOf:
        - type: object
          properties:
            name:
              type: string
              description: Name of product entry
            model:
              type: string
              description: Name of product model
            links:
              $ref: '#/components/schemas/ProductModelLinks'
              description: Path to product instance
          required:
            - name
            - model
            - links
        - $ref: '#/components/schemas/Taxonomy'

    Taxonomy:
      type: object
      properties:
        services:
          type: array 
          items:
            type: string
          description: List of service identifiers
        providers:
          type: array 
          items:
            type: string
          description: List of provider identifiers
        domains:
          type: array 
          items:
            type: string
          description: List of domain identifiers
        categories:
          type: array 
          items:
            type: string
          description: List of category identifiers
        features:
          type: array 
          items:
            type: string
          description: List of feature identifiers
        labels:
          type: array 
          items:
            type: string
          description: List of label identifiers

    Relation:
      type: object
      properties:
        instance:
          type: array 
          items:
            type: string
          description: Instances of product entries for given term
        intersect:
          allOf:
            - $ref: '#/components/schemas/Taxonomy'
          description: Intersection of terms from instances with hierarchy for given term
        symdiff:
          allOf:
            - $ref: '#/components/schemas/Taxonomy'
          description: Symmetric Difference of terms from instances with hierarchy for given term

    Term:
      type: object
      properties:
        id:
          type: string
          description: Identifier of term
        definition:
          allOf:
            - $ref: '#/components/schemas/Definition'
          description: Definition of term
        type:
          type: string
          description: Taxonomy for the term 
        name:
          type: string
          description: Name of term for common usage
        permalink:
          type: string
          description: Path to term entry
      required:
        - id
        - type
        - name
        - permalink

    Links:
      type: object
      properties:
        self:
          type: string
          description: Path to self entry
      required:
        - self

    ProductLinks:
      allOf:
        - $ref: '#/components/schemas/Links'
        - type: object
          properties:
            models:
              type: array 
              items:
                type: string
              description: Path to product models

    ProductModelLinks:
      allOf:
        - $ref: '#/components/schemas/Links'
        - type: object
          properties:
            parent:
              type: string
              description: Path to parent

